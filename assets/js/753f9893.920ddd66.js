"use strict";(self.webpackChunkutopia_os_github_io=self.webpackChunkutopia_os_github_io||[]).push([[7549],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,g=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(g,i(i({ref:t},l),{},{components:n})):a.createElement(g,i({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1017:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:1},i="Getting Started",s={unversionedId:"docs/utopia-ui/getting-started",id:"docs/utopia-ui/getting-started",title:"Getting Started",description:"install via npm",source:"@site/docs/docs/utopia-ui/getting-started.md",sourceDirName:"docs/utopia-ui",slug:"/docs/utopia-ui/getting-started",permalink:"/docs/utopia-ui/getting-started",draft:!1,editUrl:"https://github.com/utopia-os/utopia-os.github.io/tree/main/docs/docs/utopia-ui/getting-started.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Utopia UI",permalink:"/category/utopia-ui"},next:{title:"Map Components",permalink:"/category/map-components"}},p={},c=[{value:"Sample Data",id:"sample-data",level:3}],l={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"getting-started"},"Getting Started"),(0,r.kt)("p",null,"install via npm"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"}," npm install utopia-ui\n")),(0,r.kt)("p",null,"then import in your React App"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import UtopiaMap from 'utopia-ui'\n")),(0,r.kt)("p",null,"use the ",(0,r.kt)("a",{parentName:"p",href:"/docs/utopia-ui/map-components/map"},"Map UI Component")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"<UtopiaMap>\n   height='360px'\n   width='100vw'\n   center={[51.3, 9.6]}\n   zoom={6}\n   places={places}\n   events={events}\n   tags = {tags}\n</UtopiaMap>\n")),(0,r.kt)("p",null,"You can find some Sample Data (places, events, tags) for test purpose below"),(0,r.kt)("h3",{id:"sample-data"},"Sample Data"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'const places = [{\n  "id": 51,\n  "name": "Stadtgem\xfcse",\n  "text": "Stadtgem\xfcse Fulda ist eine Gem\xfcseg\xe4rtnerei in Maberzell, die es sich zur Aufgabe gemacht hat, die Stadt und seine Bewohner:innen mit regionalem, frischem und nat\xfcrlich angebautem Gem\xfcse mittels Gem\xfcsekisten zu versorgen. Es gibt also jede Woche, von Fr\xfchjahr bis Herbst, angepasst an die Saison eine Kiste mit schmackhaftem und frischem Gem\xfcse f\xfcr euch, welche ihr direkt vor Ort abholen k\xf6nnt. \\r\\n\\r\\nhttps://stadtgemuese-fulda.de",\n  "position": { "type": "Point", "coordinates": [9.632435, 50.560342] },\n  "tags": [9,13],\n},\n{\n  "id": 166,\n  "name": "Weidendom",\n  "text": "free camping",\n  "position": { "type": "Point", "coordinates": [9.438793, 50.560112] },\n  "tags": [10,11]\n}];\n\nconst events = [\n  {\n    "id": 423,\n    "name": "Hackathon",\n    "text": "still in progress",\n    "position": { "type": "Point", "coordinates": [9.5, 50.62] },\n    "start": "2022-03-25T12:00:00",\n    "end": "2022-05-12T12:00:00",\n    "tags": [10]\n  }\n]\n\nconst tags = [\n  {"id": 9, "name": "Gardening", "color": "#008e5b" },\n  {"id": 10, "name": "Art", "color": "#fdc60b" },\n  {"id": 11, "name": "Nature", "color": "#8cbb26"  },\n  {"id": 13, "name": "Market", "color": "#2a71b0" }\n]\n\n')))}u.isMDXComponent=!0}}]);